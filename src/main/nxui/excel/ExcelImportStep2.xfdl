<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.5">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="ExcelImportStep2" classname="ExcelImportStep2" left="0" top="0" width="500" height="600" titletext="step2: select sheet." onload="ExcelImportStep2_onload">
    <Layouts>
      <Layout>
        <ListBox id="lst_sheets" taborder="0" left="150" top="24" width="330" height="100" innerdataset="@ds_sheetList" codecolumn="code" datacolumn="data" onitemchanged="lst_sheets_onitemchanged"/>
        <Static id="Static00" taborder="1" text="1. select sheet." left="20" top="24" width="120" height="26"/>
        <Static id="Static01" taborder="2" text="2. display selected sheet data." left="20" top="152" width="200" height="26"/>
        <Button id="btn_displayData" taborder="3" text="display data" left="225" top="152" width="110" height="26" onclick="btn_displayData_onclick"/>
        <Grid id="grd_dataPreview" taborder="4" useinputpanel="false" left="20" top="204" width="460" height="340" binddataset="ds_sheetData">
          <Formats/>
        </Grid>
        <Static id="st_rowCount" taborder="5" text="row count: 0" left="336" top="174" width="144" height="26" style="align:right middle;"/>
        <Button id="btn_prev" taborder="6" text="Back" left="272" top="553" width="60" height="30" onclick="btn_prev_onclick"/>
        <Button id="btn_next" taborder="7" text="Next" left="346" top="553" width="60" height="30" enable="false" onclick="btn_next_onclick"/>
        <Button id="btn_cancel" taborder="8" text="Cancel" left="420" top="552" width="60" height="30" onclick="btn_cancel_onclick"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_sheetList" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="code" type="INT" size="5"/>
          <Column id="data" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_sheetData" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false"/>
    </Objects>
    <Script type="xscript5.0"><![CDATA[
/*
 * 그리드 body밴드의 구성정보가 단일 row를 대상으로 작성됨.
 */

this.datasetPool = [];
this.dsSelectedData = "";
this.fileType = "xlsx";

this.ExcelImportStep2_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{
	var ownFrame = this.getOwnerFrame();
	var mainForm = ownFrame.form;
	//var excelData = mainForm.div_step1.excelData;

	//this.initForm(excelData);
	this.initForm();
}


//init. form 
//this.initForm = function(excelData)
this.initForm = function()
{
	this.setTitleText();
	
	this.clearData();
	
	//var rtn = this.getSheetList(excelData);
	var rtn = this.getSheetList();

	//sheet가 1개 이면 자동읽기
	if(this.ds_sheetList.rowcount == 1)
	{
		this.readSheetData();
	}
	
	this.parent.setDisplayLoadingImage(false);
}


this.setTitleText = function()
{
	var ownFrame = this.getOwnerFrame();
	ownFrame.set_showcascadetitletext(false);
	ownFrame.set_titletext("Step 2 of 3: Select sheet");
}


/**
 * sheet 목록표시
 * @return {boolean} 성공여부
 */
//this.getSheetList = function(excelData)
this.getSheetList = function()
{
	//var datasetList = excelData.split("<SeperatoR>");
	var datasetList = this.parent.importDatasetList;
	var length = datasetList.length;
	var tempXml;
	var row;
	var sheetName;
	var dsSheetList = this.ds_sheetList;
	
	for(var i=0; i<length; i++)
	{
// 		tempXml = datasetList[i];
// 
// 		var excelDataset = this.getDataset(i);
// 		
// 		excelDataset.loadXML(tempXml);
// 		sheetName = excelDataset.getConstColumn("sheetName");
// 		excelDataset.deleteColumn("sheetName"); //상수컬럼제거
// 		
// 		row = dsSheetList.addRow();
// 		dsSheetList.setColumn(row, "code", i);
// 		dsSheetList.setColumn(row, "data", sheetName);	

		

		var excelDataset = datasetList[i];
		sheetName = excelDataset.getConstColumn("sheetName");
		
		//상수컬럼제거를 위한 속성 설정
		excelDataset.set_updatecontrol(false);
		excelDataset.deleteColumn("sheetName"); //상수컬럼제거
		
		//trace("상수컬럼 제거확인!!" + excelDataset.saveXML());
		
		row = dsSheetList.addRow();
		dsSheetList.setColumn(row, "code", i);
		dsSheetList.setColumn(row, "data", sheetName);	
	}
	
	this.lst_sheets.set_index(0);
	
	return true;
}



/**
 * dataset을 반환한다.
 * 필요한 dataset이 없을 경우는 생성 후 반환.
 * @param {number} seq 요청순번
 * @return {dataset} dataset(신규 또는 존재하는 dataset)
 */
this.getDataset = function(seq)
{
	var datasetPool = this.datasetPool;
	var dataset = datasetPool[seq];
	
	if(!dataset)
	{
		dataset = new Dataset();
		dataset.name = "_ds_excel_"+ seq;
		this.addChild(dataset.name, dataset);
		
		dataset.set_updatecontrol(false); //상수열을 제거하기 위한 용도
		datasetPool.push(dataset);
	}

	return dataset;
}


/**
 * 2단계에서 사용되는 dataset을 초기화 한다.
 */
this.clearData = function()
{
	var datasetPool = this.datasetPool;
	
	this.ds_sheetList.clearData();
	this.ds_sheetData.clearData();
	
	
	//datasetPool에 관리되는 dataset을 초기화한다.
	var count = datasetPool.length;

	for(var i=0; i<count; i++)
	{
		datasetPool[i].clearData();
	}
}


//display data of sheet.
this.btn_displayData_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.readSheetData();
}


/**
 * sheet data를 읽는다.
 * @param {dataset} dataset 컬럼이 추가될 dataset. 
 */
this.readSheetData = function(dataset)
{
	var isCalledLastStep = false;
	if(Eco.isEmpty(dataset))
	{
		dataset = this.ds_sheetData;
	}
	else
	{
	    //실제 import시 전체데이터를 읽을 때 호출됨.
	    //   form ExcelImportStep2.xfdl
		isCalledLastStep = true;
	}
	

	var sheetIndex = this.lst_sheets.index;
	
	if(isCalledLastStep) return;
	
	//var sourceDataset = Eco.XComp.lookup(this, "_ds_excel_" + sheetIndex);
	var sourceDataset = this.parent.importDatasetList[sheetIndex];
	
	dataset.copyData(sourceDataset);
	
	var rtn = this.setPreviewGrid();
	
	
	if(rtn) 
    {
		var rowCount = dataset.rowcount;
		this.st_rowCount.set_text("row count: " + rowCount);
		
		if(rowCount == 0)
		{
			this.btn_next.set_enable(false);
			
		} else {
			this.btn_next.set_enable(true);
		}
		
	}
}



/**
 * 미리보기 그리드에 엑셀데이터 표시
 */
this.setPreviewGrid = function()
{
	var dataset = this.ds_sheetData;
	var grd = this.grd_dataPreview;
	grd.set_enableredraw(false);
	grd.set_enableevent(false);
	grd.createFormat();
	grd.deleteContentsRow("head", 0);
	
	grd.set_enableredraw(true);
	grd.set_enableevent(true);
		
	return true;
}




//when changed selected-sheet name.
this.lst_sheets_onitemchanged = function(obj:ListBox, e:nexacro.ItemChangeEventInfo)
{
	this.btn_next.set_enable(false);
}



this.btn_prev_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.clearData();

	var ownFrame = this.getOwnerFrame();
	var mainForm = ownFrame.form;
	
	mainForm.div_step1.setTitleText();
	mainForm.div_step1.set_visible(true);
	mainForm.div_step2.set_visible(false);
}


this.btn_cancel_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.parent.close();
}

this.btn_next_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.dsSelectedData = this.ds_sheetData;
	var ownFrame = this.getOwnerFrame();
	var mainForm = ownFrame.form;
	
	mainForm.div_step1.set_visible(false);
	mainForm.div_step2.set_visible(false);
	mainForm.div_step3.set_url("");
	mainForm.div_step3.set_url("Example::ExcelImportStep3.xfdl");
	mainForm.div_step3.set_visible(true);
	//mainForm.div_step3.initForm(this.ds_sheetData);
}

]]></Script>
  </Form>
</FDL>
