<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.5">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="sample007_1" classname="11" inheritanceid="" position="absolute" titletext="파일업로드(3rd이미지압축)" left="0" top="0" width="1260" height="693" onload="form_onload">
    <Layouts>
      <Layout>
        <Button id="btnResizing" taborder="0" text="다중이미지 업로드" position="absolute" left="16" width="418" top="17" height="39" onclick="btnResizing_onclick"/>
        <Grid id="Grid00" taborder="1" useinputpanel="false" left="9.52%" top="131" right="68.17%" height="170" binddataset="Dataset00" onselectchanged="Grid00_onselectchanged">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="80"/>
                <Column size="80"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
                <Row size="24" band="summ"/>
              </Rows>
              <Band id="head">
                <Cell text="Column0"/>
                <Cell col="1" text="Column1"/>
              </Band>
              <Band id="body">
                <Cell displaytype="text" edittype="text" text="bind:Column0"/>
                <Cell col="1" text="bind:Column1"/>
              </Band>
              <Band id="summary">
                <Cell/>
                <Cell col="1" text="expr:sum(Column1)"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="Dataset00" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="Column0" type="STRING" size="256"/>
          <Column id="Column1" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="Column0">12123</Col>
            <Col id="Column1">123123</Col>
          </Row>
          <Row>
            <Col id="Column1">12312</Col>
            <Col id="Column0">123123</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.0"><![CDATA[/***********************************************************************************
* Common Library
***********************************************************************************/
include "lib::comLib.xjs";
/***********************************************************************************
* Global/Local Variable
***********************************************************************************/

/***********************************************************************************
* Form Function
***********************************************************************************/


/***********************************************************************************
* Form Event
***********************************************************************************/
this.form_onload = function (obj:Form, e:LoadEventInfo){
   Ex.core.init(obj,693);
}

/**
* 파일선택 / 이미지 resizing 100*100 500*500
* @param {object} o.form >>>> this
* @param {string} o.type >>>> image type(image/*)         
* @param {array} resize 형식 [100,500]   [-1]이면 이미지resize처리 안함
* @param {boolen} multiselect 
* @return 
* @example
* Ex.file.getFile(this,"fn_imgResizeCallback");
* @memberOf publick
*/	
this.btnResizing_onclick = function(obj:Button,  e:nexacro.ClickEventInfo) {
	//@param : this
	//@callback : callback name
	//@type :default: 모든파일 :  image/* (이미지type) 	
	//@multiselect: true : 멀티파일선택 false : 싱글선택
	Ex.file.getFile({frmobj:this    
						,callback:"fn_imgResizeCallback"
	                    ,type:"image/*"
	                    ,resize:[100,500]
	                    ,multiselect:true});
}



/**
* resizing callbak
* @param {object} 이미지 obj
* @return
* @memberOf private

this.fn_imgResizeCallback  = function(objImgDs)
{
	trace(" objImgDs : "  +objImgDs);
	if(Eco.isEmpty(objImgDs)) {
		return;
	}
	trace(" objImgDs : "  + objImgDs.saveXML());
	var ds_temp = Ex.util.isCheckDs("ds_temp");
	var ds_outTemp = Ex.util.isCheckDs("ds_outTemp");
	
	objImgDs.filter("FILE_SIZE==100");
	ds_temp.copyData(objImgDs,true);
	objImgDs.filter("");
	
	objImgDs.filter("FILE_SIZE==500");
	ds_outTemp.copyData(objImgDs,true);
	objImgDs.filter("");

	this.ds1.clearData();
	if(this.ds1.rowcount == 0){
	   this.ds1.assign(ds_temp);
	   this.ds_file.assign(ds_outTemp);
	} else {
	   this.ds1.appendData(ds_temp);
	   this.ds_file.appendData(ds_outTemp);
	}
	this.ImageViewer00.set_image(this.ds_file.getColumn(0,"DATA"));
	this.setTimer(1,3000);
}


this.fn_callBack = function (strSvcId, nErrorCode, strErrorMsg) {
	if (nErrorCode < 0) {
		return this.gfn_alert(strErrorMsg);		
	}
	if (strSvcId == "saveFile"){
		trace(this.ds_upFile.saveXML());
	}
}*/

this.Grid00_onselectchanged = function(obj:Grid, e:nexacro.GridSelectEventInfo)
{

}
]]></Script>
  </Form>
</FDL>
