<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.5">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="scatter" classname="EcoChartSample" left="0" top="0" width="1024" height="723" titletext="scatter" style="background:#ffffffff;" onload="scatter_onload">
    <Layouts>
      <Layout>
        <Static id="Static01" taborder="24" text="Female" left="86.62%" top="92" right="4.2%" height="20" style="font:normal 10 Meiryo UI, malgun gothic;"/>
        <Static id="Static00" taborder="25" text="Male" left="70.12%" top="92" height="20" style="font:normal 10 Meiryo UI, malgun gothic;" right="20.7%"/>
        <Grid id="grd_series2" taborder="26" binddataset="ds_scatter2" scrollbars="autovert" useinputpanel="false" top="119" left="83.11%" right="1.27%" height="586">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="80"/>
                <Column size="80"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="Income"/>
                <Cell col="1" text="Expense"/>
              </Band>
              <Band id="body">
                <Cell text="bind:x"/>
                <Cell col="1" text="bind:y"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Grid id="grd_series1" taborder="27" binddataset="ds_scatter1" scrollbars="autovert" useinputpanel="false" left="65.63%" top="120" height="586" right="18.75%">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="80"/>
                <Column size="80"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="Income"/>
                <Cell col="1" text="Expense"/>
              </Band>
              <Band id="body">
                <Cell text="bind:x"/>
                <Cell col="1" text="bind:y"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Static id="Static04" taborder="28" text="ScatterPlot &amp; Selection" cssclass="WF_sta_Title" left="1.95%" top="10" right="4.69%" height="47" onclick="Static04_onclick"/>
        <EcoChart id="ecochart" left="3.52%" top="118" right="36.33%" height="586" style="background:#ffffffff;border:0 solid #808080ff ;bordertype:round 15 15 ;"/>
        <Static id="st_male" taborder="30" left="74.02%" top="92" right="19.82%" height="20" style="border:1 solid #808080ff ;color:red;align:center middle;font:bold 10 Meiryo UI, malgun gothic;"/>
        <Static id="st_female" taborder="31" left="91.8%" top="92" right="2.05%" height="20" style="border:1 solid #808080ff ;color:red;align:center middle;font:bold 10 Meiryo UI, malgun gothic;"/>
        <Static id="Static02" taborder="32" text="Fixed Income" left="3.61%" top="84" right="87.5%" height="25"/>
        <Edit id="Edit00" taborder="33" left="12.01%" top="84" right="77.25%" height="23"/>
        <Static id="Static03" taborder="34" text="Expense" left="24.02%" top="84" right="70.21%" height="25"/>
        <Edit id="Edit01" taborder="35" left="29.49%" top="84" right="59.77%" height="23"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_scatter2" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="x" type="FLOAT" size="256"/>
          <Column id="y" type="FLOAT" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_scatter1" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="x" type="FLOAT" size="256"/>
          <Column id="y" type="FLOAT" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_scatter" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="index" type="STRING" size="256"/>
          <Column id="series1_x" type="FLOAT" size="256"/>
          <Column id="series1_y" type="FLOAT" size="256"/>
          <Column id="series2_x" type="FLOAT" size="256"/>
          <Column id="series2_y" type="FLOAT" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript5.0"><![CDATA[
var chart,
	xaxis,
	yaxis,
	selection,
	maleSeries;
	

this.scatter_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{
	this.setSeriesData();
	this.drawChart();
}

this.setSeriesData = function()
{
	var series1_x,
		series1_y,
		series2_x,
		series2_y,
		row = -1,
		maxrow = 200,
		dsSeries = this.ds_scatter,
		dsSeries1 = this.ds_scatter1,
		dsSeries2 = this.ds_scatter2;

	dsSeries.deleteAll();
	dsSeries1.deleteAll();
	dsSeries2.deleteAll();
	
	for (var i = 0; i < maxrow; i++)
	{
		series1_x = nexacro.round(Math.random() * 1050) + 550;
		series1_y = nexacro.round(Math.random() * 850) + 650;
		series2_x = nexacro.round(Math.random() * 750) + 350;
		series2_y = nexacro.round(Math.random() * 650) + 550;
		
		row = dsSeries.addRow();
		dsSeries.setColumn(row, "index", row);
		dsSeries.setColumn(row, "series1_x", series1_x);
		dsSeries.setColumn(row, "series1_y", series1_y);
		dsSeries.setColumn(row, "series2_x", series2_x);
		dsSeries.setColumn(row, "series2_y", series2_y);
				
		row = dsSeries1.addRow();
		dsSeries1.setColumn(row, "x", series1_x);
		dsSeries1.setColumn(row, "y", series1_y);

		row = dsSeries2.addRow();
		dsSeries2.setColumn(row, "x", series2_x);
		dsSeries2.setColumn(row, "y", series2_y);
	}
}

this.drawChart = function()
{
	if (!this.chart)
	{
		var config = {
			"type": "Basic",
			"chart": {
				"id": "scatterplot chart",
				"bindDataset": "ds_scatter",
				"bindCategory": "index"
			},
			"valueAxis": [
				{
					"id": "ValueAxis X",
					"title": "Fixed Income",
					"position": "bottom",
					"autoscaleMargin": 0.05,
					"setLineWidth": 1,
					"lineColor": "#717a8380",
					"tickColor": "#717a8380",
					"tickWidth": 1,
					"labelFontSize": 10,
					"labelFontType": "bold",
					"titleFontSize": 11,
					"titleFontType": "bold",
					"titleMargin": 30
				},
				{
					"id": "ValueAxis Y",
					"title": "Expense",
					"position": "left",
					"autoscaleMargin": 0.05,
					"setLineWidth": 1,
					"lineColor": "#717a8380",
					"tickColor": "#717a8380",
					"tickWidth": 1,
					"labelFontSize": 10,
					"labelFontType": "bold",
					"titleFontSize": 11,
					"titleFontType": "bold",
					"titleMargin": 30
				}
			],
			"series": [
				{
					"id": "Series 1",
					"title": "Male",
					"bindX": "series1_x",
					"bindY": "series1_y",
					"xaxis": "ValueAxis X",
					"yaxis": "ValueAxis Y",
					"showPoint": true,
					"pointLineWidth": 0.1,
					"pointRadius": 5,
					"pointColor": "#1bc366",
					"pointFillColor": "#bcd200",
					"pointOpacity": 1,
					"showHighLight": true,
					"highLightWidth": 2,
					"highLightFillColor": "#bcd2004c",
					"highLightColor": "#1bc366",
					"highLightOpacity": 1,
					"highLightRadius": 9,
					"events": {
						"onmousedblclick": this.onmousedbclickseries,
						"onmouseenter": this.onmouseenterseries,
						"onmouseleave": this.onmouseleaveseries
					}
				},
				{
					"id": "Series 2",
					"title": "Female",
					"bindX": "series2_x",
					"bindY": "series2_y",
					"xaxis": "ValueAxis X",
					"yaxis": "ValueAxis Y",
					"showPoint": true,
					"pointSymbol": "diamond",
					"pointLineWidth": 0.1,
					"pointRadius": 5,
					"pointColor": "#1a59bf",
					"pointFillColor": "#1abd9c",
					"pointOpacity": 1,
					"showHighLight": true,
					"highLightWidth": 2,
					"highLightFillColor": "#1abd9c4c",
					"highLightColor": "#1a59bf",
					"highLightOpacity": 1,
					"highLightRadius": 9,
					"events": {
						"onmousedblclick": this.onmousedbclickseries,
						"onmouseenter": this.onmouseenterseries,
						"onmouseleave": this.onmouseleaveseries
					}
				}
			],
			"legend": {
				"position": "bottom",
				"autoMargins": false,
				"marginTop": 0,
				"marginLeft": 100,
				"labelFontSize": 10,
				"labelFontType": "bold",
				"markerSize": 16,
				"columns": 2,
				"spacing": 40
			},
			"tooltip": {
				"text": "Fixed Income: [%x]\nExpense: [%y]",
				"fontFace": "Meiryo UI",
				"fontSize": 10,
				"fontType": "bold",
				"fontColor": "#ffffff",
				"borderWidth": 1,
				"borderStyle": "solid",
				"borderColor": "#717a83",
				"color": "#717a83cc",
				"opacity": 1,
				"hookWidth": 10,
				"hookHeight": 10,
				"offsetX": 0,
				"offsetY": 20
			},
			"selection": {
				"mode": "xy",
				//"zoom": true,
				"events": {
					//"onselecting": this.onselectingselection,
					"onselected": this.onselectedselection,
					//"onunselected": this.onunselectedselection
				}
			}
		};
	
		this.ecochart.set_config(config);
	}
	
	this.ecochart.draw();
	
	this.chart = this.ecochart.getChart();
	selection = this.ecochart.getSelection();
}



this.onmouseenterseries = function(obj, e)
{
	//trace("onmouseenterseries", obj, e, this);
	this.Edit00.set_value(e.data.x);
	this.Edit01.set_value(e.data.y);
}

this.onmouseleaveseries = function(obj, e)
{
	//trace("onmouseleaveseries", obj, e, this);
	this.Edit00.set_value("");
	this.Edit01.set_value("");
}

this.onmousedbclickseries = function(obj, e)
{
// 	trace("onmousedbclickseries", obj, e, this);
 	alert("Fixed Income: " + e.data.x + "\nExpense: " + e.data.y);
}

this.onselectingselection = function(obj, e)
{
//	trace("onselectingselection", obj, e, this);
}

this.onselectedselection = function(obj, e)
{
// 	trace("onselectedselection", obj, e,this);
// 	trace("ranges", e.ranges);
	
	var ranges = e.ranges,
		xaxis = ranges.xaxis,
		yaxis = ranges.yaxis,
		xFrom, xTo,
		yFrom, yTo,
		filters = "";
	
	if (xaxis && yaxis)
	{
		this.grd_series1.set_enableevent(false);
		this.grd_series2.set_enableevent(false);
		
		xFrom = xaxis.from;
		xTo = xaxis.to;
		yFrom = yaxis.from;
		yTo = yaxis.to;
		
		filters = "x >= " + xFrom;
		filters += " && x <= " + xTo;
		filters += " && y >= " + yFrom;
		filters += " && y <= " + yTo;
		
		//trace("filters", filters);
		this.ds_scatter1.filter(filters);
		
		xFrom = xaxis.from;
		xTo = xaxis.to;
		yFrom = yaxis.from;
		yTo = yaxis.to;
		
		filters = "x >= " + xFrom;
		filters += " && x <= " + xTo;
		filters += " && y >= " + yFrom;
		filters += " && y <= " + yTo;
		
		//trace("filters", filters);
		this.ds_scatter2.filter(filters);
		
		this.grd_series1.set_enableevent(true);
		this.grd_series2.set_enableevent(true);
		
		this.st_male.set_text(this.ds_scatter1.getRowCount());
		this.st_female.set_text(this.ds_scatter2.getRowCount());
	}
}

this.onunselectedselection = function(obj, e)
{
	//trace("onunselectedselection", obj, e, this);
}
]]></Script>
  </Form>
</FDL>
